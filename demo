#!/usr/bin/env python3
"""
Simple HTTP server to run the Financial Transparency Platform demo
This works without Node.js installation
"""

import http.server
import socketserver
import webbrowser
import os
import sys
from pathlib import Path

# Configuration
PORT = 8000
HOST = 'localhost'

class CustomHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
    def end_headers(self):
        # Add CORS headers to allow cross-origin requests
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type')
        super().end_headers()

def main():
    global PORT
    print("üöÄ Starting Financial Transparency Platform Demo Server...")
    print(f"üì° Server running at: http://{HOST}:{PORT}")
    print("üåê Opening demo in your browser...")
    print("‚èπÔ∏è  Press Ctrl+C to stop the server")
    print("-" * 50)
    
    # Change to the directory containing the demo
    os.chdir(Path(__file__).parent)
    
    # Start the server
    with socketserver.TCPServer((HOST, PORT), CustomHTTPRequestHandler) as httpd:
        try:
            # Open browser automatically
            webbrowser.open(f'http://{HOST}:{PORT}/demo.html')
            
            # Start serving
            httpd.serve_forever()
        except KeyboardInterrupt:
            print("\nüõë Server stopped by user")
            sys.exit(0)
        except OSError as e:
            if e.errno == 10048:  # Port already in use
                print(f"‚ùå Port {PORT} is already in use. Trying port {PORT + 1}...")
                PORT += 1
                with socketserver.TCPServer((HOST, PORT), CustomHTTPRequestHandler) as httpd2:
                    webbrowser.open(f'http://{HOST}:{PORT}/demo.html')
                    httpd2.serve_forever()
            else:
                print(f"‚ùå Error starting server: {e}")
                sys.exit(1)

if __name__ == "__main__":
    main()
